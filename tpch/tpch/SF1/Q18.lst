--####################################################################
--# Large Volume Customer Query (Q18)
--####################################################################

--# The Large Volume Customer Query ranks customers based on 
--# their having placed a large quantity order. 
--# Large quantity orders are defined as those orders 
--# whose total quantity is above a certain level.

--###############################
--# Business Question
--###############################

--# The Large Volume Customer Query finds a list of 
--# the top 100 customers who have ever placed large quantity orders. 
--# The query lists the customer name, customer key, the order key, 
--# date and total price and the quantity for the order.

\explain plan
  select
      c_name,
	  c_custkey,
	  o_orderkey,
	  o_orderdate,
	  o_totalprice,
	  sum(l_quantity)
  from
      customer,
	  orders,
	  lineitem
  where
      o_orderkey in (
                      select
                          l_orderkey
                      from
                          lineitem
                      group by
                          l_orderkey 
                      having
                          sum(l_quantity) > 300
                    )
    and c_custkey = o_custkey
    and o_orderkey = l_orderkey
  group by
      c_name,
	  c_custkey,
	  o_orderkey,
	  o_orderdate,
	  o_totalprice
  order by
      o_totalprice desc,
      o_orderdate
  fetch 100;

C_NAME             C_CUSTKEY O_ORDERKEY O_ORDERDATE O_TOTALPRICE SUM(L_QUANTITY)
------------------ --------- ---------- ----------- ------------ ---------------
Customer#000128120    128120    4722021 1994-04-07     544089.09             323
Customer#000144617    144617    3043270 1997-02-12     530604.44             317
Customer#000013940     13940    2232932 1997-04-13     522720.61             304
Customer#000066790     66790    2199712 1996-09-30     515531.82             327
Customer#000046435     46435    4745607 1997-07-03     508047.99             309
Customer#000015272     15272    3883783 1993-07-28     500241.33             302
Customer#000146608    146608    3342468 1994-06-12     499794.58             303
Customer#000096103     96103    5984582 1992-03-16     494398.79             312
Customer#000024341     24341    1474818 1992-11-15     491348.26             302
Customer#000137446    137446    5489475 1997-05-23     487763.25             311
Customer#000107590    107590    4267751 1994-11-04     485141.38             301
Customer#000050008     50008    2366755 1996-12-09     483891.26             302
Customer#000015619     15619    3767271 1996-08-07     480083.96             318
Customer#000077260     77260    1436544 1992-09-12     479499.43             307
Customer#000109379    109379    5746311 1996-10-10     478064.11             302
Customer#000054602     54602    5832321 1997-02-09     471220.08             307
Customer#000105995    105995    2096705 1994-07-03     469692.58             307
Customer#000148885    148885    2942469 1992-05-31     469630.44             313
Customer#000114586    114586     551136 1993-05-19     469605.59             308
Customer#000105260    105260    5296167 1996-09-06     469360.57             303

C_NAME             C_CUSTKEY O_ORDERKEY O_ORDERDATE O_TOTALPRICE SUM(L_QUANTITY)
------------------ --------- ---------- ----------- ------------ ---------------
Customer#000147197    147197    1263015 1997-02-02     467149.67             320
Customer#000064483     64483    2745894 1996-07-04     466991.35             304
Customer#000136573    136573    2761378 1996-05-31     461282.73             301
Customer#000016384     16384     502886 1994-04-12     458378.92             312
Customer#000117919    117919    2869152 1996-06-20     456815.92             317
Customer#000012251     12251     735366 1993-11-24     455107.26             309
Customer#000120098    120098    1971680 1995-06-14     453451.23             308
Customer#000066098     66098    5007490 1992-08-07     453436.16             304
Customer#000117076    117076    4290656 1997-02-05     449545.85             301
Customer#000129379    129379    4720454 1997-06-07     448665.79             303
Customer#000126865    126865    4702759 1994-11-07     447606.65             320
Customer#000088876     88876     983201 1993-12-30     446717.46             304
Customer#000036619     36619    4806726 1995-01-17     446704.09             328
Customer#000141823    141823    2806245 1996-12-29     446269.12             310
Customer#000053029     53029    2662214 1993-08-13     446144.49             302
Customer#000018188     18188    3037414 1995-01-25     443807.22             308
Customer#000066533     66533      29158 1995-10-21      443576.5             305
Customer#000037729     37729    4134341 1995-06-29     441082.97             309
Customer#000003566      3566    2329187 1998-01-04     439803.36             304
Customer#000045538     45538    4527553 1994-05-22     436275.31             305

C_NAME             C_CUSTKEY O_ORDERKEY O_ORDERDATE O_TOTALPRICE SUM(L_QUANTITY)
------------------ --------- ---------- ----------- ------------ ---------------
Customer#000081581     81581    4739650 1995-11-04      435405.9             305
Customer#000119989    119989    1544643 1997-09-20     434568.25             320
Customer#000003680      3680    3861123 1998-07-03     433525.97             301
Customer#000113131    113131     967334 1995-12-15     432957.75             301
Customer#000141098    141098     565574 1995-09-24     430986.69             301
Customer#000093392     93392    5200102 1997-01-22     425487.51             304
Customer#000015631     15631    1845057 1994-05-12     419879.59             302
Customer#000112987    112987    4439686 1996-09-17     418161.49             305
Customer#000012599     12599    4259524 1998-02-12     415200.61             304
Customer#000105410    105410    4478371 1996-03-05     412754.51             302
Customer#000149842    149842    5156581 1994-05-30     411329.35             302
Customer#000010129     10129    5849444 1994-03-21     409129.85             309
Customer#000069904     69904    1742403 1996-10-19        408513             305
Customer#000017746     17746       6882 1997-04-09     408446.93             303
Customer#000013072     13072    1481925 1998-03-15     399195.47             301
Customer#000082441     82441     857959 1994-02-07     382579.74             305
Customer#000088703     88703    2995076 1994-01-30     363812.12             302

57 rows selected.

>>>  start print plan

< Execution Plan >
=================================================================================================================
|  IDX  |  NODE DESCRIPTION                                                           |                    ROWS |
-----------------------------------------------------------------------------------------------------------------
|    0  |  SELECT STATEMENT                                                           |                      57 |
|    1  |    QUERY BLOCK ("$QB_IDX_2")                                                |                      57 |
|    2  |      MULTIPLE CLUSTER                                                       | LOCAL/REMOTE         57 |
|    3  |        SELECT STATEMENT                                                     |                      24 |
|    4  |          QUERY BLOCK ("$QB_IDX_2")                                          |                      24 |
|    5  |            SORT INSTANT                                                     |                      24 |
|    6  |              GROUP HASH INSTANT                                             |                      24 |
|    7  |                NESTED JOIN (INNER JOIN)                                     |                     168 |
|    8  |                  NESTED JOIN (INNER JOIN)                                   |                      24 |
|    9  |                    NESTED JOIN (INNER JOIN)                                 |                      24 |
|   10  |                      INLINE_VIEW ("_A4")                                    |                      24 |
|   11  |                        QUERY BLOCK ("$QB_IDX_8")                            |                      24 |
|   12  |                          GROUP HASH INSTANT                                 |                      24 |
|   13  |                            TABLE ACCESS ("LINEITEM" AS _A5)                 |                 3011036 |
|   14  |                      INDEX ACCESS ("ORDERS" AS _A3, "ORDERS_PK_INDEX")      | (        24)         24 |
|   15  |                    INDEX ACCESS ("CUSTOMER" AS _A2, "CUSTOMER_PK_INDEX")    | (        24)         24 |
|   16  |                  INDEX ACCESS ("LINEITEM" AS _A1, "LINEITEM_ORDERKEY_FK")   | (       168)        168 |
=================================================================================================================

     1  -  TARGET : CUSTOMER.C_NAME, CUSTOMER.C_CUSTKEY, ORDERS.O_ORDERKEY, ORDERS.O_ORDERDATE, ORDERS.O_TOTALPRICE, SUM( LINEITEM.L_QUANTITY )
     2  -  SQL : SELECT /*+ USE_ORDER_SORT USE_GROUP_HASH(49844) KEEP_JOINED_TABLE USE_NL_IN( _A1 ) USE_NL_IN( _A2 ) USE_NL_IN( _A3 ) NO_MERGE( _A4 ) INDEX( _A3, "PUBLIC"."ORDERS_PK_INDEX" ) INDEX( _A2, "PUBLIC"."CUSTOMER_PK_INDEX" ) INDEX( _A1, "PUBLIC"."LINEITEM_ORDERKEY_FK" ) */ "_A3"."O_TOTALPRICE", "_A3"."O_ORDERDATE", "_A2"."C_NAME", "_A2"."C_CUSTKEY", "_A3"."O_ORDERKEY", SUM( "_A1"."L_QUANTITY" ) FROM ( ( ( ( SELECT /*+ USE_GROUP_HASH(1500000) FULL( _A5 ) */ "_A5"."L_ORDERKEY" FROM "PUBLIC"."LINEITEM"@LOCAL AS "_A5" GROUP BY "_A5"."L_ORDERKEY" HAVING SUM( "_A5"."L_QUANTITY" ) > :_V0 ) AS "_A4"("L_ORDERKEY") INNER JOIN "PUBLIC"."ORDERS"@LOCAL AS "_A3" ON true ) ALIAS "_A6" INNER JOIN "PUBLIC"."CUSTOMER"@LOCAL AS "_A2" ON true ) ALIAS "_A7" INNER JOIN "PUBLIC"."LINEITEM"@LOCAL AS "_A1" ON true ) ALIAS "_A8" WHERE "_A3"."O_ORDERKEY" = "_A4"."L_ORDERKEY" AND "_A2"."C_CUSTKEY" = "_A3"."O_CUSTKEY" AND "_A1"."L_ORDERKEY" = "_A3"."O_ORDERKEY" GROUP BY "_A2"."C_NAME", "_A2"."C_CUSTKEY", "_A3"."O_ORDERKEY", "_A3"."O_ORDERDATE", "_A3"."O_TOTALPRICE" ORDER BY "_A3"."O_TOTALPRICE" DESC NULLS LAST, "_A3"."O_ORDERDATE" ASC NULLS LAST LIMIT 100
           TARGET DOMAIN : G1(G1N1) 24 rows, G2(G2N1) 33 rows
           MERGE SORTING
             SORT KEY : ORDERS.O_TOTALPRICE, ORDERS.O_ORDERDATE
     4  -  TARGET : _A3.O_TOTALPRICE, _A3.O_ORDERDATE, _A2.C_NAME, _A2.C_CUSTKEY, _A3.O_ORDERKEY, SUM( _A1.L_QUANTITY )
     5  -  LIMIT SORT
           SORT KEY : "_A3.O_TOTALPRICE DESC NULLS LAST", "_A3.O_ORDERDATE ASC NULLS LAST"
           RECORD COLUMN : _A2.C_NAME, _A2.C_CUSTKEY, _A3.O_ORDERKEY, SUM( _A1.L_QUANTITY )
           READ KEY COLUMN : _A3.O_TOTALPRICE, _A3.O_ORDERDATE
           READ RECORD COLUMN : _A2.C_NAME, _A2.C_CUSTKEY, _A3.O_ORDERKEY, SUM( _A1.L_QUANTITY )
     6  -  GROUP KEY : _A2.C_NAME, _A2.C_CUSTKEY, _A3.O_ORDERKEY, _A3.O_ORDERDATE, _A3.O_TOTALPRICE
           RECORD COLUMN : SUM( _A1.L_QUANTITY )
           READ KEY COLUMN : _A2.C_NAME, _A2.C_CUSTKEY, _A3.O_ORDERKEY, _A3.O_ORDERDATE, _A3.O_TOTALPRICE
           READ RECORD COLUMN : SUM( _A1.L_QUANTITY )
     7  -  JOINED COLUMN : _A2.C_NAME, _A2.C_CUSTKEY, _A3.O_ORDERKEY, _A3.O_ORDERDATE, _A3.O_TOTALPRICE, _A1.L_QUANTITY
             CONSTANT FILTER : TRUE
     8  -  JOINED COLUMN : _A3.O_ORDERKEY, _A2.C_NAME, _A2.C_CUSTKEY, _A3.O_ORDERDATE, _A3.O_TOTALPRICE
             CONSTANT FILTER : TRUE
     9  -  JOINED COLUMN : _A3.O_CUSTKEY, _A3.O_ORDERKEY, _A3.O_ORDERDATE, _A3.O_TOTALPRICE
             CONSTANT FILTER : TRUE
    10  -  COLUMN : _A5.L_ORDERKEY AS L_ORDERKEY
    11  -  TARGET : _A5.L_ORDERKEY
    12  -  GROUP KEY : _A5.L_ORDERKEY
           RECORD COLUMN : SUM( _A5.L_QUANTITY )
           READ KEY COLUMN : _A5.L_ORDERKEY
           READ RECORD COLUMN : SUM( _A5.L_QUANTITY )
             PHYSICAL FILTER : SUM( _A5.L_QUANTITY ) > :_V0
    13  -  HASH SHARD ( # 3 ) 
           READ COLUMN : _A5.L_ORDERKEY, _A5.L_QUANTITY
    14  -  HASH SHARD ( # 3 ) 
           READ INDEX COLUMN : _A3.O_ORDERKEY
           READ TABLE COLUMN : _A3.O_CUSTKEY, _A3.O_TOTALPRICE, _A3.O_ORDERDATE
             MIN RANGE : _A3.O_ORDERKEY = {_A4.L_ORDERKEY}
             MAX RANGE : _A3.O_ORDERKEY = {_A4.L_ORDERKEY}
           FETCH ONE ROW
    15  -  CLONED 
           READ INDEX COLUMN : _A2.C_CUSTKEY
           READ TABLE COLUMN : _A2.C_NAME
             MIN RANGE : _A2.C_CUSTKEY = {_A3.O_CUSTKEY}
             MAX RANGE : _A2.C_CUSTKEY = {_A3.O_CUSTKEY}
           FETCH ONE ROW
    16  -  HASH SHARD ( # 3 ) 
           READ INDEX COLUMN : _A1.L_ORDERKEY
           READ TABLE COLUMN : _A1.L_QUANTITY
             MIN RANGE : _A1.L_ORDERKEY = {_A3.O_ORDERKEY}
             MAX RANGE : _A1.L_ORDERKEY = {_A3.O_ORDERKEY}

<<<  end print plan



--###############################
--# Functional Query Definition
--###############################

--# Return the first 100 selected rows

\set linesize 400
\set timing on;

--# result: 57 rows
--#        c_name       | c_custkey | o_orderkey | o_orderdate | o_totalprice |  sum   
--# --------------------+-----------+------------+-------------+--------------+--------
--#  Customer#000128120 |    128120 |    4722021 | 1994-04-07  |    544089.09 | 323.00
--#  Customer#000144617 |    144617 |    3043270 | 1997-02-12  |    530604.44 | 317.00
--#  .....
--#  .....
--#  .....
--#  Customer#000082441 |     82441 |     857959 | 1994-02-07  |    382579.74 | 305.00
--#  Customer#000088703 |     88703 |    2995076 | 1994-01-30  |    363812.12 | 302.00

\explain plan
  select
      c_name,
	  c_custkey,
	  o_orderkey,
	  o_orderdate,
	  o_totalprice,
	  sum(l_quantity)
  from
      customer,
	  orders,
	  lineitem
  where
      o_orderkey in (
                      select
                          l_orderkey
                      from
                          lineitem
                      group by
                          l_orderkey 
                      having
                          sum(l_quantity) > 300
                    )
    and c_custkey = o_custkey
    and o_orderkey = l_orderkey
  group by
      c_name,
	  c_custkey,
	  o_orderkey,
	  o_orderdate,
	  o_totalprice
  order by
      o_totalprice desc,
      o_orderdate
  fetch 100;

C_NAME             C_CUSTKEY O_ORDERKEY O_ORDERDATE O_TOTALPRICE SUM(L_QUANTITY)
------------------ --------- ---------- ----------- ------------ ---------------
Customer#000128120    128120    4722021 1994-04-07     544089.09             323
Customer#000144617    144617    3043270 1997-02-12     530604.44             317
Customer#000013940     13940    2232932 1997-04-13     522720.61             304
Customer#000066790     66790    2199712 1996-09-30     515531.82             327
Customer#000046435     46435    4745607 1997-07-03     508047.99             309
Customer#000015272     15272    3883783 1993-07-28     500241.33             302
Customer#000146608    146608    3342468 1994-06-12     499794.58             303
Customer#000096103     96103    5984582 1992-03-16     494398.79             312
Customer#000024341     24341    1474818 1992-11-15     491348.26             302
Customer#000137446    137446    5489475 1997-05-23     487763.25             311
Customer#000107590    107590    4267751 1994-11-04     485141.38             301
Customer#000050008     50008    2366755 1996-12-09     483891.26             302
Customer#000015619     15619    3767271 1996-08-07     480083.96             318
Customer#000077260     77260    1436544 1992-09-12     479499.43             307
Customer#000109379    109379    5746311 1996-10-10     478064.11             302
Customer#000054602     54602    5832321 1997-02-09     471220.08             307
Customer#000105995    105995    2096705 1994-07-03     469692.58             307
Customer#000148885    148885    2942469 1992-05-31     469630.44             313
Customer#000114586    114586     551136 1993-05-19     469605.59             308
Customer#000105260    105260    5296167 1996-09-06     469360.57             303

C_NAME             C_CUSTKEY O_ORDERKEY O_ORDERDATE O_TOTALPRICE SUM(L_QUANTITY)
------------------ --------- ---------- ----------- ------------ ---------------
Customer#000147197    147197    1263015 1997-02-02     467149.67             320
Customer#000064483     64483    2745894 1996-07-04     466991.35             304
Customer#000136573    136573    2761378 1996-05-31     461282.73             301
Customer#000016384     16384     502886 1994-04-12     458378.92             312
Customer#000117919    117919    2869152 1996-06-20     456815.92             317
Customer#000012251     12251     735366 1993-11-24     455107.26             309
Customer#000120098    120098    1971680 1995-06-14     453451.23             308
Customer#000066098     66098    5007490 1992-08-07     453436.16             304
Customer#000117076    117076    4290656 1997-02-05     449545.85             301
Customer#000129379    129379    4720454 1997-06-07     448665.79             303
Customer#000126865    126865    4702759 1994-11-07     447606.65             320
Customer#000088876     88876     983201 1993-12-30     446717.46             304
Customer#000036619     36619    4806726 1995-01-17     446704.09             328
Customer#000141823    141823    2806245 1996-12-29     446269.12             310
Customer#000053029     53029    2662214 1993-08-13     446144.49             302
Customer#000018188     18188    3037414 1995-01-25     443807.22             308
Customer#000066533     66533      29158 1995-10-21      443576.5             305
Customer#000037729     37729    4134341 1995-06-29     441082.97             309
Customer#000003566      3566    2329187 1998-01-04     439803.36             304
Customer#000045538     45538    4527553 1994-05-22     436275.31             305

C_NAME             C_CUSTKEY O_ORDERKEY O_ORDERDATE O_TOTALPRICE SUM(L_QUANTITY)
------------------ --------- ---------- ----------- ------------ ---------------
Customer#000081581     81581    4739650 1995-11-04      435405.9             305
Customer#000119989    119989    1544643 1997-09-20     434568.25             320
Customer#000003680      3680    3861123 1998-07-03     433525.97             301
Customer#000113131    113131     967334 1995-12-15     432957.75             301
Customer#000141098    141098     565574 1995-09-24     430986.69             301
Customer#000093392     93392    5200102 1997-01-22     425487.51             304
Customer#000015631     15631    1845057 1994-05-12     419879.59             302
Customer#000112987    112987    4439686 1996-09-17     418161.49             305
Customer#000012599     12599    4259524 1998-02-12     415200.61             304
Customer#000105410    105410    4478371 1996-03-05     412754.51             302
Customer#000149842    149842    5156581 1994-05-30     411329.35             302
Customer#000010129     10129    5849444 1994-03-21     409129.85             309
Customer#000069904     69904    1742403 1996-10-19        408513             305
Customer#000017746     17746       6882 1997-04-09     408446.93             303
Customer#000013072     13072    1481925 1998-03-15     399195.47             301
Customer#000082441     82441     857959 1994-02-07     382579.74             305
Customer#000088703     88703    2995076 1994-01-30     363812.12             302

57 rows selected.

>>>  start print plan

< Execution Plan >
=================================================================================================================
|  IDX  |  NODE DESCRIPTION                                                           |                    ROWS |
-----------------------------------------------------------------------------------------------------------------
|    0  |  SELECT STATEMENT                                                           |                      57 |
|    1  |    QUERY BLOCK ("$QB_IDX_2")                                                |                      57 |
|    2  |      MULTIPLE CLUSTER                                                       | LOCAL/REMOTE         57 |
|    3  |        SELECT STATEMENT                                                     |                      24 |
|    4  |          QUERY BLOCK ("$QB_IDX_2")                                          |                      24 |
|    5  |            SORT INSTANT                                                     |                      24 |
|    6  |              GROUP HASH INSTANT                                             |                      24 |
|    7  |                NESTED JOIN (INNER JOIN)                                     |                     168 |
|    8  |                  NESTED JOIN (INNER JOIN)                                   |                      24 |
|    9  |                    NESTED JOIN (INNER JOIN)                                 |                      24 |
|   10  |                      INLINE_VIEW ("_A4")                                    |                      24 |
|   11  |                        QUERY BLOCK ("$QB_IDX_8")                            |                      24 |
|   12  |                          GROUP HASH INSTANT                                 |                      24 |
|   13  |                            TABLE ACCESS ("LINEITEM" AS _A5)                 |                 3011036 |
|   14  |                      INDEX ACCESS ("ORDERS" AS _A3, "ORDERS_PK_INDEX")      | (        24)         24 |
|   15  |                    INDEX ACCESS ("CUSTOMER" AS _A2, "CUSTOMER_PK_INDEX")    | (        24)         24 |
|   16  |                  INDEX ACCESS ("LINEITEM" AS _A1, "LINEITEM_ORDERKEY_FK")   | (       168)        168 |
=================================================================================================================

     1  -  TARGET : CUSTOMER.C_NAME, CUSTOMER.C_CUSTKEY, ORDERS.O_ORDERKEY, ORDERS.O_ORDERDATE, ORDERS.O_TOTALPRICE, SUM( LINEITEM.L_QUANTITY )
     2  -  SQL : SELECT /*+ USE_ORDER_SORT USE_GROUP_HASH(49844) KEEP_JOINED_TABLE USE_NL_IN( _A1 ) USE_NL_IN( _A2 ) USE_NL_IN( _A3 ) NO_MERGE( _A4 ) INDEX( _A3, "PUBLIC"."ORDERS_PK_INDEX" ) INDEX( _A2, "PUBLIC"."CUSTOMER_PK_INDEX" ) INDEX( _A1, "PUBLIC"."LINEITEM_ORDERKEY_FK" ) */ "_A3"."O_TOTALPRICE", "_A3"."O_ORDERDATE", "_A2"."C_NAME", "_A2"."C_CUSTKEY", "_A3"."O_ORDERKEY", SUM( "_A1"."L_QUANTITY" ) FROM ( ( ( ( SELECT /*+ USE_GROUP_HASH(1500000) FULL( _A5 ) */ "_A5"."L_ORDERKEY" FROM "PUBLIC"."LINEITEM"@LOCAL AS "_A5" GROUP BY "_A5"."L_ORDERKEY" HAVING SUM( "_A5"."L_QUANTITY" ) > :_V0 ) AS "_A4"("L_ORDERKEY") INNER JOIN "PUBLIC"."ORDERS"@LOCAL AS "_A3" ON true ) ALIAS "_A6" INNER JOIN "PUBLIC"."CUSTOMER"@LOCAL AS "_A2" ON true ) ALIAS "_A7" INNER JOIN "PUBLIC"."LINEITEM"@LOCAL AS "_A1" ON true ) ALIAS "_A8" WHERE "_A3"."O_ORDERKEY" = "_A4"."L_ORDERKEY" AND "_A2"."C_CUSTKEY" = "_A3"."O_CUSTKEY" AND "_A1"."L_ORDERKEY" = "_A3"."O_ORDERKEY" GROUP BY "_A2"."C_NAME", "_A2"."C_CUSTKEY", "_A3"."O_ORDERKEY", "_A3"."O_ORDERDATE", "_A3"."O_TOTALPRICE" ORDER BY "_A3"."O_TOTALPRICE" DESC NULLS LAST, "_A3"."O_ORDERDATE" ASC NULLS LAST LIMIT 100
           TARGET DOMAIN : G1(G1N1) 24 rows, G2(G2N1) 33 rows
           MERGE SORTING
             SORT KEY : ORDERS.O_TOTALPRICE, ORDERS.O_ORDERDATE
     4  -  TARGET : _A3.O_TOTALPRICE, _A3.O_ORDERDATE, _A2.C_NAME, _A2.C_CUSTKEY, _A3.O_ORDERKEY, SUM( _A1.L_QUANTITY )
     5  -  LIMIT SORT
           SORT KEY : "_A3.O_TOTALPRICE DESC NULLS LAST", "_A3.O_ORDERDATE ASC NULLS LAST"
           RECORD COLUMN : _A2.C_NAME, _A2.C_CUSTKEY, _A3.O_ORDERKEY, SUM( _A1.L_QUANTITY )
           READ KEY COLUMN : _A3.O_TOTALPRICE, _A3.O_ORDERDATE
           READ RECORD COLUMN : _A2.C_NAME, _A2.C_CUSTKEY, _A3.O_ORDERKEY, SUM( _A1.L_QUANTITY )
     6  -  GROUP KEY : _A2.C_NAME, _A2.C_CUSTKEY, _A3.O_ORDERKEY, _A3.O_ORDERDATE, _A3.O_TOTALPRICE
           RECORD COLUMN : SUM( _A1.L_QUANTITY )
           READ KEY COLUMN : _A2.C_NAME, _A2.C_CUSTKEY, _A3.O_ORDERKEY, _A3.O_ORDERDATE, _A3.O_TOTALPRICE
           READ RECORD COLUMN : SUM( _A1.L_QUANTITY )
     7  -  JOINED COLUMN : _A2.C_NAME, _A2.C_CUSTKEY, _A3.O_ORDERKEY, _A3.O_ORDERDATE, _A3.O_TOTALPRICE, _A1.L_QUANTITY
             CONSTANT FILTER : TRUE
     8  -  JOINED COLUMN : _A3.O_ORDERKEY, _A2.C_NAME, _A2.C_CUSTKEY, _A3.O_ORDERDATE, _A3.O_TOTALPRICE
             CONSTANT FILTER : TRUE
     9  -  JOINED COLUMN : _A3.O_CUSTKEY, _A3.O_ORDERKEY, _A3.O_ORDERDATE, _A3.O_TOTALPRICE
             CONSTANT FILTER : TRUE
    10  -  COLUMN : _A5.L_ORDERKEY AS L_ORDERKEY
    11  -  TARGET : _A5.L_ORDERKEY
    12  -  GROUP KEY : _A5.L_ORDERKEY
           RECORD COLUMN : SUM( _A5.L_QUANTITY )
           READ KEY COLUMN : _A5.L_ORDERKEY
           READ RECORD COLUMN : SUM( _A5.L_QUANTITY )
             PHYSICAL FILTER : SUM( _A5.L_QUANTITY ) > :_V0
    13  -  HASH SHARD ( # 3 ) 
           READ COLUMN : _A5.L_ORDERKEY, _A5.L_QUANTITY
    14  -  HASH SHARD ( # 3 ) 
           READ INDEX COLUMN : _A3.O_ORDERKEY
           READ TABLE COLUMN : _A3.O_CUSTKEY, _A3.O_TOTALPRICE, _A3.O_ORDERDATE
             MIN RANGE : _A3.O_ORDERKEY = {_A4.L_ORDERKEY}
             MAX RANGE : _A3.O_ORDERKEY = {_A4.L_ORDERKEY}
           FETCH ONE ROW
    15  -  CLONED 
           READ INDEX COLUMN : _A2.C_CUSTKEY
           READ TABLE COLUMN : _A2.C_NAME
             MIN RANGE : _A2.C_CUSTKEY = {_A3.O_CUSTKEY}
             MAX RANGE : _A2.C_CUSTKEY = {_A3.O_CUSTKEY}
           FETCH ONE ROW
    16  -  HASH SHARD ( # 3 ) 
           READ INDEX COLUMN : _A1.L_ORDERKEY
           READ TABLE COLUMN : _A1.L_QUANTITY
             MIN RANGE : _A1.L_ORDERKEY = {_A3.O_ORDERKEY}
             MAX RANGE : _A1.L_ORDERKEY = {_A3.O_ORDERKEY}

<<<  end print plan


Elapsed time: 621.65100 ms 


--#################################
--# Report
--#################################

\set timing off;

INSERT INTO TPCH_SF1_REPORT 
       VALUES ( 'SF1_Q18', (:VAR_ELAPSED_TIME__ / 1000), TRUNC( 60 * 60 * 1000 / :VAR_ELAPSED_TIME__, 0 ) );

1 row created.

COMMIT;

Commit complete.


