--####################################################################
--# Promotion Effect Query (Q14)
--####################################################################

--# This query monitors the market response to a promotion such as 
--# TV advertisements or a special campaign.

--###############################
--# Business Question
--###############################

--# The Promotion Effect Query determines what percentage of 
--# the revenue in a given year and month was derived from 
--# promotional parts. 
--# The query considers only parts actually shipped in 
--# that month and gives the percentage. 
--# Revenue is defined as (l_extendedprice * (1-l_discount)).

\explain plan
select
    ROUND( 100.00 * sum( case
                      when p_type like 'PROMO%'
                      then l_extendedprice*(1-l_discount)
                      else 0
                  end ) 
           / sum(l_extendedprice * (1 - l_discount)), 2 ) 
    as promo_revenue
from
    lineitem,
    part
where
      l_partkey = p_partkey
  and l_shipdate >= date '1995-09-01'
  and l_shipdate < date '1995-09-01' + interval '1' month;

PROMO_REVENUE
-------------
        16.38

1 row selected.

>>>  start print plan

< Execution Plan >
==================================================================================================
|  IDX  |  NODE DESCRIPTION                                            |                    ROWS |
--------------------------------------------------------------------------------------------------
|    0  |  SELECT STATEMENT                                            |                       1 |
|    1  |    QUERY BLOCK ("$QB_IDX_2")                                 |                       1 |
|    2  |      SINGLE CLUSTER                                          | LOCAL/REMOTE          1 |
|    3  |        CLUSTER PUSHER ("_$NI_8")                             |                   75983 |
|    4  |          PLAN BASED CLUSTER                                  | LOCAL/REMOTE      75983 |
|    5  |            TABLE ACCESS ("LINEITEM")                         |                   38079 |
|    6  |        SELECT STATEMENT                                      |                       1 |
|    7  |          QUERY BLOCK ("$QB_IDX_2")                           |                       1 |
|    8  |            AGGREGATION BY HASH                               |                       1 |
|    9  |              HASH JOIN (INNER JOIN)                          |                   38072 |
|   10  |                TABLE ACCESS ("PART" AS _A2)                  |                  100007 |
|   11  |                HASH JOIN INSTANT                             |                   38072 |
|   12  |                  PUSHER TABLE ACCESS ("_$NI_8" AS _A1)       |                   38072 |
==================================================================================================

     1  -  TARGET : ROUND(( 100.00 * SUM( CASE WHEN PART.P_TYPE LIKE 'PROMO%' THEN _$NI_8.L_EXTENDEDPRICE * ( 1 - _$NI_8.L_DISCOUNT ) ELSE 0 END  ) ) / SUM( _$NI_8.L_EXTENDEDPRICE * ( 1 - _$NI_8.L_DISCOUNT ) ),2) AS PROMO_REVENUE
     2  -  SQL : SELECT /*+ KEEP_JOINED_TABLE USE_HASH_IN( _A1, 18599 ) FULL( _A2 ) FULL( _A1 ) */ SUM( CASE WHEN "_A2"."P_TYPE" LIKE :_V0 THEN "_A1"."L_EXTENDEDPRICE" * (:_V1 - "_A1"."L_DISCOUNT") ELSE :_V2 END  ), SUM( "_A1"."L_EXTENDEDPRICE" * (:_V1 - "_A1"."L_DISCOUNT") ) FROM ( "PUBLIC"."PART"@LOCAL AS "_A2" INNER JOIN "SESSION_SCHEMA"."_$NI_8"@LOCAL AS "_A1" ON "_A1"."L_PARTKEY" = "_A2"."P_PARTKEY") ALIAS "_A3"
           TARGET DOMAIN : G1(G1N1) 1 rows, G2(G2N1) 1 rows
           RE-AGGREGATION
             AGGREGATION : SUM( SUM( CASE WHEN PART.P_TYPE LIKE 'PROMO%' THEN _$NI_8.L_EXTENDEDPRICE * ( 1 - _$NI_8.L_DISCOUNT ) ELSE 0 END  ) ), SUM( SUM( _$NI_8.L_EXTENDEDPRICE * ( 1 - _$NI_8.L_DISCOUNT ) ) )
     3  -  SQL : DECLARE INSTANT TABLE "SESSION_SCHEMA"."_$NI_8" ( "L_PARTKEY" NUMBER(10, 0), "L_EXTENDEDPRICE" NUMBER(12, 2), "L_DISCOUNT" NUMBER(12, 2) ) 
           COLUMN : LINEITEM.L_PARTKEY AS L_PARTKEY, LINEITEM.L_EXTENDEDPRICE AS L_EXTENDEDPRICE, LINEITEM.L_DISCOUNT AS L_DISCOUNT
           SHARDED : LINEITEM.L_PARTKEY
           TARGET DOMAIN : G1(G1N1) 38072 rows, G2(G2N1) 37911 rows
     4  -  SQL : SELECT /*+ FULL( _A1 ) */ "_A1"."L_PARTKEY", "_A1"."L_EXTENDEDPRICE", "_A1"."L_DISCOUNT" FROM "PUBLIC"."LINEITEM"@LOCAL AS "_A1" WHERE "_A1"."L_SHIPDATE" >= :_V0 AND "_A1"."L_SHIPDATE" < :_V1
           TARGET DOMAIN : G1(G1N1) 38079 rows, G2(G2N1) 37904 rows
     5  -  HASH SHARD ( # 3 ) 
           READ COLUMN : LINEITEM.L_PARTKEY, LINEITEM.L_EXTENDEDPRICE, LINEITEM.L_DISCOUNT, LINEITEM.L_SHIPDATE
             PHYSICAL FILTER : LINEITEM.L_SHIPDATE >= DATE'1995-09-01' AND LINEITEM.L_SHIPDATE < DATE'1995-09-01' + CAST( '1' AS INTERVAL(MONTH) )
     7  -  TARGET : SUM( CASE WHEN _A2.P_TYPE LIKE :_V0 THEN _A1.L_EXTENDEDPRICE * ( :_V1 - _A1.L_DISCOUNT ) ELSE :_V2 END  ), SUM( _A1.L_EXTENDEDPRICE * ( :_V1 - _A1.L_DISCOUNT ) )
     8  -  AGGREGATION : SUM( CASE WHEN _A2.P_TYPE LIKE :_V0 THEN _A1.L_EXTENDEDPRICE * ( :_V1 - _A1.L_DISCOUNT ) ELSE :_V2 END  ), SUM( _A1.L_EXTENDEDPRICE * ( :_V1 - _A1.L_DISCOUNT ) )
     9  -  JOINED COLUMN : _A2.P_TYPE, _A1.L_EXTENDEDPRICE, _A1.L_DISCOUNT
    10  -  HASH SHARD ( # 3 ) 
           READ COLUMN : _A2.P_PARTKEY, _A2.P_TYPE
    11  -  HASH KEY : _A1.L_PARTKEY
           RECORD COLUMN : _A1.L_EXTENDEDPRICE, _A1.L_DISCOUNT
           READ KEY COLUMN : _A1.L_PARTKEY, _A1.L_EXTENDEDPRICE, _A1.L_DISCOUNT
             HASH FILTER : _A1.L_PARTKEY = _A2.P_PARTKEY
    12  -  READ COLUMN : _A1.L_PARTKEY, _A1.L_EXTENDEDPRICE, _A1.L_DISCOUNT

<<<  end print plan



--###############################
--# Functional Query Definition
--###############################

\set linesize 400
\set timing on;

--# result: 1 rows
--#  promo_revenue 
--# ---------------
--#          16.38
\explain plan
select
    ROUND( 100.00 * sum( case
                      when p_type like 'PROMO%'
                      then l_extendedprice*(1-l_discount)
                      else 0
                  end ) 
           / sum(l_extendedprice * (1 - l_discount)), 2 ) 
    as promo_revenue
from
    lineitem,
    part
where
      l_partkey = p_partkey
  and l_shipdate >= date '1995-09-01'
  and l_shipdate < date '1995-09-01' + interval '1' month;

PROMO_REVENUE
-------------
        16.38

1 row selected.

>>>  start print plan

< Execution Plan >
==================================================================================================
|  IDX  |  NODE DESCRIPTION                                            |                    ROWS |
--------------------------------------------------------------------------------------------------
|    0  |  SELECT STATEMENT                                            |                       1 |
|    1  |    QUERY BLOCK ("$QB_IDX_2")                                 |                       1 |
|    2  |      SINGLE CLUSTER                                          | LOCAL/REMOTE          1 |
|    3  |        CLUSTER PUSHER ("_$NI_8")                             |                   75983 |
|    4  |          PLAN BASED CLUSTER                                  | LOCAL/REMOTE      75983 |
|    5  |            TABLE ACCESS ("LINEITEM")                         |                   38079 |
|    6  |        SELECT STATEMENT                                      |                       1 |
|    7  |          QUERY BLOCK ("$QB_IDX_2")                           |                       1 |
|    8  |            AGGREGATION BY HASH                               |                       1 |
|    9  |              HASH JOIN (INNER JOIN)                          |                   38072 |
|   10  |                TABLE ACCESS ("PART" AS _A2)                  |                  100007 |
|   11  |                HASH JOIN INSTANT                             |                   38072 |
|   12  |                  PUSHER TABLE ACCESS ("_$NI_8" AS _A1)       |                   38072 |
==================================================================================================

     1  -  TARGET : ROUND(( 100.00 * SUM( CASE WHEN PART.P_TYPE LIKE 'PROMO%' THEN _$NI_8.L_EXTENDEDPRICE * ( 1 - _$NI_8.L_DISCOUNT ) ELSE 0 END  ) ) / SUM( _$NI_8.L_EXTENDEDPRICE * ( 1 - _$NI_8.L_DISCOUNT ) ),2) AS PROMO_REVENUE
     2  -  SQL : SELECT /*+ KEEP_JOINED_TABLE USE_HASH_IN( _A1, 18599 ) FULL( _A2 ) FULL( _A1 ) */ SUM( CASE WHEN "_A2"."P_TYPE" LIKE :_V0 THEN "_A1"."L_EXTENDEDPRICE" * (:_V1 - "_A1"."L_DISCOUNT") ELSE :_V2 END  ), SUM( "_A1"."L_EXTENDEDPRICE" * (:_V1 - "_A1"."L_DISCOUNT") ) FROM ( "PUBLIC"."PART"@LOCAL AS "_A2" INNER JOIN "SESSION_SCHEMA"."_$NI_8"@LOCAL AS "_A1" ON "_A1"."L_PARTKEY" = "_A2"."P_PARTKEY") ALIAS "_A3"
           TARGET DOMAIN : G1(G1N1) 1 rows, G2(G2N1) 1 rows
           RE-AGGREGATION
             AGGREGATION : SUM( SUM( CASE WHEN PART.P_TYPE LIKE 'PROMO%' THEN _$NI_8.L_EXTENDEDPRICE * ( 1 - _$NI_8.L_DISCOUNT ) ELSE 0 END  ) ), SUM( SUM( _$NI_8.L_EXTENDEDPRICE * ( 1 - _$NI_8.L_DISCOUNT ) ) )
     3  -  SQL : DECLARE INSTANT TABLE "SESSION_SCHEMA"."_$NI_8" ( "L_PARTKEY" NUMBER(10, 0), "L_EXTENDEDPRICE" NUMBER(12, 2), "L_DISCOUNT" NUMBER(12, 2) ) 
           COLUMN : LINEITEM.L_PARTKEY AS L_PARTKEY, LINEITEM.L_EXTENDEDPRICE AS L_EXTENDEDPRICE, LINEITEM.L_DISCOUNT AS L_DISCOUNT
           SHARDED : LINEITEM.L_PARTKEY
           TARGET DOMAIN : G1(G1N1) 38072 rows, G2(G2N1) 37911 rows
     4  -  SQL : SELECT /*+ FULL( _A1 ) */ "_A1"."L_PARTKEY", "_A1"."L_EXTENDEDPRICE", "_A1"."L_DISCOUNT" FROM "PUBLIC"."LINEITEM"@LOCAL AS "_A1" WHERE "_A1"."L_SHIPDATE" >= :_V0 AND "_A1"."L_SHIPDATE" < :_V1
           TARGET DOMAIN : G1(G1N1) 38079 rows, G2(G2N1) 37904 rows
     5  -  HASH SHARD ( # 3 ) 
           READ COLUMN : LINEITEM.L_PARTKEY, LINEITEM.L_EXTENDEDPRICE, LINEITEM.L_DISCOUNT, LINEITEM.L_SHIPDATE
             PHYSICAL FILTER : LINEITEM.L_SHIPDATE >= DATE'1995-09-01' AND LINEITEM.L_SHIPDATE < DATE'1995-09-01' + CAST( '1' AS INTERVAL(MONTH) )
     7  -  TARGET : SUM( CASE WHEN _A2.P_TYPE LIKE :_V0 THEN _A1.L_EXTENDEDPRICE * ( :_V1 - _A1.L_DISCOUNT ) ELSE :_V2 END  ), SUM( _A1.L_EXTENDEDPRICE * ( :_V1 - _A1.L_DISCOUNT ) )
     8  -  AGGREGATION : SUM( CASE WHEN _A2.P_TYPE LIKE :_V0 THEN _A1.L_EXTENDEDPRICE * ( :_V1 - _A1.L_DISCOUNT ) ELSE :_V2 END  ), SUM( _A1.L_EXTENDEDPRICE * ( :_V1 - _A1.L_DISCOUNT ) )
     9  -  JOINED COLUMN : _A2.P_TYPE, _A1.L_EXTENDEDPRICE, _A1.L_DISCOUNT
    10  -  HASH SHARD ( # 3 ) 
           READ COLUMN : _A2.P_PARTKEY, _A2.P_TYPE
    11  -  HASH KEY : _A1.L_PARTKEY
           RECORD COLUMN : _A1.L_EXTENDEDPRICE, _A1.L_DISCOUNT
           READ KEY COLUMN : _A1.L_PARTKEY, _A1.L_EXTENDEDPRICE, _A1.L_DISCOUNT
             HASH FILTER : _A1.L_PARTKEY = _A2.P_PARTKEY
    12  -  READ COLUMN : _A1.L_PARTKEY, _A1.L_EXTENDEDPRICE, _A1.L_DISCOUNT

<<<  end print plan


Elapsed time: 493.94700 ms 


--#################################
--# Report
--#################################

\set timing off;
INSERT INTO TPCH_SF1_REPORT 
       VALUES ( 'SF1_Q14', (:VAR_ELAPSED_TIME__ / 1000), TRUNC( 60 * 60 * 1000 / :VAR_ELAPSED_TIME__, 0 ) );

1 row created.

COMMIT;

Commit complete.

